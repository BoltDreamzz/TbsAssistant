"""
Django settings for hairtherapy project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-8ezi*35y-j)c00_-z(orex7rtmvzil$g=#j0^k$-_$q_!a%c5w'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = config('DEBUG', default=False, cast=bool)


ALLOWED_HOSTS = ['localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bookings',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'rest_framework',
    'django.contrib.humanize',
    'crispy_forms',
    'crispy_bootstrap5',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'allauth.account.middleware.AccountMiddleware',


]

ROOT_URLCONF = 'hairtherapy.urls'

AUTHENTICATION_BACKENDS = (
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hairtherapy.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# DATABASES = {
#     'default': dj_database_url.config(default=config('DATABASE_URL'))
# }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SITE_ID = 1

ACCOUNT_LOGIN_METHODS = {"email"}  # You can use {"email", "username"} or {"email", "username", "both"}
ACCOUNT_SIGNUP_FIELDS = ["email*", "password1*", "password2*"]  # * = required field


LOGIN_REDIRECT_URL = '/'
ACCOUNT_LOGOUT_REDIRECT_URL = '/'

STATICFILES_DIRS = [
    BASE_DIR / "static",  # Directory where you store static files in your project
]

# Directory where static files will be collected for production
STATIC_ROOT = BASE_DIR / "staticfiles"  # This is the directory where `collectstatic` will place files



MEDIA_URL = '/media/'  # This is the URL where media files will be accessed from in the browser

MEDIA_ROOT = BASE_DIR / "media" 

STATIC_URL = '/static/'
# STATIC_ROOT = BASE_DIR / 'staticfiles/'


STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

STRIPE_SECRET_KEY = ''
STRIPE_SECRET_KEY = os.environ.get('STRIPE_SECRET_KEY')


STRIPE_PUBLISHABLE_KEY = 'pk_test_51RGUDKPw1l0nfkrUOKSC5p1ixwSbMQUOAfdsbwfGqzUnLNDca5goXAnbETDXgxuWY5tCvbh4AXCN4MQAjKF54KL000tuDUhcnP'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' #'django.core.mail.backends.smtp.EmailBackend'

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'boltdreamz@gmail.com'
EMAIL_HOST_PASSWORD = 'tvrjrvjvmvkisvqv'
DEFAULT_FROM_EMAIL = 'hello@tbs.com'
ADMIN_EMAIL = 'boltdreamz@gmail.com'


GOOGLE_CALENDAR_CREDENTIALS_PATH = 'credentials.json'  # Path to your service account key JSON file
GOOGLE_CALENDAR_ID = 'e510f6bf8845ce1f7820a8ffbdfb9bf1ac8c61eb2edbb653823c3533609315ac@group.calendar.google.com'

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"
